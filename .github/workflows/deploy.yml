name: Deploy App

on:
  push:
    tags:
      - 'release*'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read configuration
        id: config
        run: |
          IMAGE_NAME=$(grep 'IMAGE_NAME' config.ini | cut -d '=' -f 2 | tr -d ' ')
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          SERVER_IP=$(grep 'SERVER_IP' config.ini | cut -d '=' -f 2 | tr -d ' ')
          echo "SERVER_IP=$SERVER_IP" >> $GITHUB_ENV
          DAEMON_JSON=$(grep 'DAEMON_JSON' config.ini | cut -d '=' -f 2 | tr -d ' ')
          echo "DAEMON_JSON=$DAEMON_JSON" >> $GITHUB_ENV
          USER_NAME=$(grep 'USER_NAME' config.ini | cut -d '=' -f 2 | tr -d ' ')
          echo "USER_NAME=$USER_NAME" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME .

      - name: Save Docker image
        run: |
          docker save $IMAGE_NAME | gzip > $IMAGE_NAME.tar.gz

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "move image"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -T  -o StrictHostKeyChecking=no $IMAGE_NAME.tar.gz $USER_NAME@$SERVER_IP:/tmp/$IMAGE_NAME.tar.gz
          echo "upload deploy script"
          scp -i private_key.pem -T  -o StrictHostKeyChecking=no deploy.sh $USER_NAME@$SERVER_IP:/tmp/deploy.sh
          echo "run deploy script"
          ssh -i private_key.pem -T T -o StrictHostKeyChecking=no $USER_NAME@$SERVER_IP << EOF
          chmod +x /tmp/deploy.sh
          /tmp/deploy.sh $IMAGE_NAME '$DAEMON_JSON'
          EOF
          rm private_key.pem
